use serde::{Deserialize, Serialize};

use crate::{
    integer::ZZ,
    Integer,
};

pub trait ClassConfig: Send + Sync + Sized + 'static {
    type Int: Integer;
    
    fn discriminant() -> Self::Int;
    fn default_nucomp_bound() -> Self::Int;
}

/// Specs for testing class group - discriminant and nucomp bound
#[derive(Copy, Clone, Debug, Default, Eq, PartialEq, PartialOrd, Ord, Hash, Serialize, Deserialize)]
pub struct TestClassConfig;

impl ClassConfig for TestClassConfig {
    type Int = ZZ;

    fn discriminant() -> Self::Int {
        const DISCRIMINANT_ABS: &'static str = "4317691815857125654877103063805538258304534055913558995937896265414226467675838217967464111823805637397681689548933380287963403903024070698952698713564600001020302455551579541375030138161381752127687987056044417286485558370006218644954314456098141716563457356544700187694292714939997529330586989685677713138404829982972959463316478999491007128334186598645083406504058406930082094275532391885408037130383664772950500667176010578495338475449244935691537254958874025748466115437469954409625202941555052249642870792934493218898979574520791693575851109711772583447666625631816079241989890465235537359511278431697448098774126877921343260401146554658952117359789054272489217677591785658403131142050404745495763330191385022052496621052299890443575489742515595497931145259287339142099544687065613866268583963983615742155847383688681319437071932009650168538096026066985509257232980837633229313525898394539299377018819178943577932583951";
        
        - Self::Int::from(DISCRIMINANT_ABS)
    }

    fn default_nucomp_bound() -> <Self as ClassConfig>::Int {
        const DEFAULT_NUCOMP_BOUND: &'static str = "1441494235883924393135121185924968992098742588002850717276862615869494967768610172806474508038126507301623260102283148459650419699318656372397440990724413774107186866776020521095301045131635882584986282478633417210136028312986731859";

        Self::Int::from(DEFAULT_NUCOMP_BOUND)
    }
}